Index: gobject/valaccodedynamicsignalbinding.vala
===================================================================
--- gobject/valaccodedynamicsignalbinding.vala	(revision 1372)
+++ gobject/valaccodedynamicsignalbinding.vala	(working copy)
@@ -29,8 +29,6 @@
 public class Vala.CCodeDynamicSignalBinding : CCodeBinding {
 	public Signal node { get; set; }
 
-	private static int signal_wrapper_id;
-
 	public CCodeDynamicSignalBinding (CCodeGenerator codegen, DynamicSignal node) {
 		this.node = node;
 		this.codegen = codegen;
@@ -43,7 +41,7 @@
 		var dynamic_signal = (DynamicSignal) node;
 
 		if (connect_wrapper_name == null) {
-			connect_wrapper_name = "_dynamic_%s%d_connect".printf (node.name, signal_wrapper_id++);
+			connect_wrapper_name = "_%sconnect".printf (dynamic_signal.get_dynamic_wrapper_cprefix());
 			var func = new CCodeFunction (connect_wrapper_name, "void");
 			func.add_parameter (new CCodeFormalParameter ("obj", "gpointer"));
 			func.add_parameter (new CCodeFormalParameter ("signal_name", "const char *"));
@@ -70,7 +68,7 @@
 		var dynamic_signal = (DynamicSignal) node;
 
 		if (disconnect_wrapper_name == null) {
-			disconnect_wrapper_name = "_dynamic_%s%d_disconnect".printf (node.name, signal_wrapper_id++);
+			disconnect_wrapper_name = "_%sdisconnect".printf (dynamic_signal.get_dynamic_wrapper_cprefix());
 			var func = new CCodeFunction (disconnect_wrapper_name, "void");
 			func.add_parameter (new CCodeFormalParameter ("obj", "gpointer"));
 			func.add_parameter (new CCodeFormalParameter ("signal_name", "const char *"));
Index: vala/valadynamicsignal.vala
===================================================================
--- vala/valadynamicsignal.vala	(revision 1372)
+++ vala/valadynamicsignal.vala	(working copy)
@@ -30,6 +30,16 @@
 
 	public Expression handler { get; set; }
 
+	string? dynamic_wrapper_prefix;
+
+	private static int signal_wrapper_id;
+
+	public string get_dynamic_wrapper_cprefix () {
+		if(dynamic_wrapper_prefix == null)
+			dynamic_wrapper_prefix = "dynamic_%s%d_".printf ( name, signal_wrapper_id++);
+		return dynamic_wrapper_prefix;
+	}
+
 	public DynamicSignal (DataType dynamic_type, string name, DataType return_type, SourceReference? source_reference = null) {
 		this.dynamic_type = dynamic_type;
 		this.name = name;
