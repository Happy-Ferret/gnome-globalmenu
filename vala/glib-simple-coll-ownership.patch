Index: vapi/glib-2.0.vapi
===================================================================
--- vapi/glib-2.0.vapi	(revision 1349)
+++ vapi/glib-2.0.vapi	(working copy)
@@ -2569,15 +2574,15 @@
 	[CCode (dup_function = "g_list_copy", free_function = "g_list_free")]
 	public class List<G> {
 		[ReturnsModifiedPointer ()]
-		public void append (G# data);
+		public void append (G data);
 		[ReturnsModifiedPointer ()]
-		public void prepend (G# data);
+		public void prepend (G data);
 		[ReturnsModifiedPointer ()]
-		public void insert (G# data, int position);
+		public void insert (G data, int position);
 		[ReturnsModifiedPointer ()]
-		public void insert_before (List<G> sibling, G# data);
+		public void insert_before (List<G> sibling, G data);
 		[ReturnsModifiedPointer ()]
-		public void insert_sorted (G# data, CompareFunc compare_func);
+		public void insert_sorted (G data, CompareFunc compare_func);
 		[ReturnsModifiedPointer ()]
 		public void remove (G data);
 		[ReturnsModifiedPointer ()]
@@ -2594,7 +2599,7 @@
 		[ReturnsModifiedPointer ()]
 		public void sort (CompareFunc compare_func);
 		[ReturnsModifiedPointer ()]
-		public void insert_sorted_with_data (G# data, CompareDataFunc compare_func);
+		public void insert_sorted_with_data (G data, CompareDataFunc compare_func);
 		[ReturnsModifiedPointer ()]
 		public void sort_with_data (CompareDataFunc compare_func);
 		[ReturnsModifiedPointer ()]
@@ -2622,15 +2627,15 @@
 	[CCode (dup_function = "g_slist_copy", free_function = "g_slist_free")]
 	public class SList<G> {
 		[ReturnsModifiedPointer ()]
-		public void append (G# data);
+		public void append (G data);
 		[ReturnsModifiedPointer ()]
-		public void prepend (G# data);
+		public void prepend (G data);
 		[ReturnsModifiedPointer ()]
-		public void insert (G# data, int position);
+		public void insert (G data, int position);
 		[ReturnsModifiedPointer ()]
-		public void insert_before (SList<G> sibling, G# data);
+		public void insert_before (SList<G> sibling, G data);
 		[ReturnsModifiedPointer ()]
-		public void insert_sorted (G# data, CompareFunc compare_func);
+		public void insert_sorted (G data, CompareFunc compare_func);
 		[ReturnsModifiedPointer ()]
 		public void remove (G data);
 		[ReturnsModifiedPointer ()]
@@ -2645,7 +2650,7 @@
 		[ReturnsModifiedPointer ()]
 		public void reverse ();
 		[ReturnsModifiedPointer ()]
-		public void insert_sorted_with_data (G# data, CompareDataFunc compare_func);
+		public void insert_sorted_with_data (G data, CompareDataFunc compare_func);
 		[ReturnsModifiedPointer ()]
 		public void sort (CompareFunc compare_func);
 		[ReturnsModifiedPointer ()]
@@ -2691,9 +2696,9 @@
 		public weak List<G> find (G data);
 		public weak List<G> find_custom (G data, CompareFunc func);
 		public void sort (CompareDataFunc compare_func, void* user_data);
-		public void push_head (G# data);
-		public void push_tail (G# data);
-		public void push_nth (G# data);
+		public void push_head (G data);
+		public void push_tail (G data);
+		public void push_nth (G data);
 		public G pop_head ();
 		public G pop_tail ();
 		public G pop_nth ();
@@ -2703,9 +2708,9 @@
 		public int index (G data);
 		public void remove (G data);
 		public void remove_all (G data);
-		public void insert_before (List<G> sibling, G# data);
-		public void insert_after (List<G> sibling, G# data);
-		public void insert_sorted (List<G> sibling, G# data, CompareDataFunc func, void* user_data);
+		public void insert_before (List<G> sibling, G data);
+		public void insert_after (List<G> sibling, G data);
+		public void insert_sorted (List<G> sibling, G data, CompareDataFunc func, void* user_data);
 	}
 
 	/* Sequences */
