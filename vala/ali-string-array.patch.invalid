Index: gobject/valaccodegeneratorsignal.vala
===================================================================
--- gobject/valaccodegeneratorsignal.vala	(revision 1349)
+++ gobject/valaccodegeneratorsignal.vala	(working copy)
@@ -30,7 +30,7 @@
 		} else if (t is ErrorType) {
 			return ("POINTER");
 		} else if (t is ArrayType) {
-			return ("POINTER");
+			return ("BOXED");
 		} else if (t is VoidType) {
 			return ("VOID");
 		} else {
@@ -195,7 +195,7 @@
 		
 		CCodeFunctionCall fc;
 		
-		if (return_type.data_type != null) {
+		if (return_type.data_type != null || return_type.is_array ()) {
 			var_decl = new CCodeDeclaration (get_value_type_name_from_type_reference (return_type));
 			var_decl.add_declarator (new CCodeVariableDeclarator ("v_return"));
 			marshaller_body.add_statement (var_decl);
@@ -243,11 +243,13 @@
 		}
 		fc.add_argument (new CCodeIdentifier ("data2"));
 		
-		if (return_type.data_type != null) {
+		if (return_type.data_type != null || return_type.is_array ()) {
 			marshaller_body.add_statement (new CCodeExpressionStatement (new CCodeAssignment (new CCodeIdentifier ("v_return"), fc)));
 			
 			CCodeFunctionCall set_fc;
-			if (return_type.type_parameter != null) {
+			if (return_type.is_array ()) {
+				set_fc = new CCodeFunctionCall (new CCodeIdentifier ("g_value_take_boxed"));
+			} else if (return_type.type_parameter != null) {
 				set_fc = new CCodeFunctionCall (new CCodeIdentifier ("g_value_set_pointer"));
 			} else if (return_type is ErrorType) {
 				set_fc = new CCodeFunctionCall (new CCodeIdentifier ("g_value_set_pointer"));
